{
  "metadata": {
    "last_updated": "2025-08-16",
    "total_patterns": 29,
    "patterns_in_pending": 29,
    "patterns_promoted": 0,
    "average_trust_score": 3.97
  },
  "statistics": {
    "total_patterns": 31,
    "patterns_promoted_this_month": 0,
    "average_trust_score": 3.96,
    "total_usage_count": 388,
    "patterns_by_category": {
      "FIX": 7,
      "PAT": 24
    }
  },
  "recent_activity": {
    "patterns_used_today": 9,
    "last_task_completed": "TbzXveKStGxs7f3pGpaMZX",
    "new_patterns_discovered": 8,
    "last_pattern_added": "PAT:SECURITY:INPUT_SANITIZATION"
  },
  "pattern_effectiveness": {
    "PAT:VALIDATION:SCHEMA": {
      "uses": 2,
      "success_rate": 100,
      "last_used": "T060_APE-61",
      "effectiveness": "excellent",
      "notes": "Comprehensive validation for pattern registration and evidence format"
    },
    "PAT:BACKWARD:COMPAT": {
      "uses": 1, 
      "success_rate": 100,
      "last_used": "T053_S01",
      "effectiveness": "excellent"
    },
    "PAT:BATCH:PROCESSING": {
      "uses": 2,
      "success_rate": 100, 
      "last_used": "T060_APE-61",
      "effectiveness": "excellent",
      "notes": "Successfully handled string array normalization in BatchProcessor.normalizeEvidence"
    },
    "PAT:TEST:SCHEMA": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T053_S01", 
      "effectiveness": "excellent"
    },
    "PAT:BATCH:PREPROCESSING": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T053_S01",
      "effectiveness": "excellent",
      "performance_notes": "Exceeded requirements by 100x (0.01ms vs 10ms target)"
    },
    "FIX:SQLITE:SYNC": {
      "uses": 13,
      "success_rate": 100,
      "last_used": "TbzXveKStGxs7f3pGpaMZX",
      "effectiveness": "excellent",
      "notes": "Essential for auto-create functionality and metadata queries. Prepared statements provide <50ms performance. Synchronous operations essential for task queries and enhanced metadata lookups. Pre-loaded data before reflection to ensure synchronous database operations."
    },
    "PAT:DI:CONSTRUCTOR": {
      "uses": 157,
      "success_rate": 98,
      "last_used": "T001", 
      "effectiveness": "excellent",
      "notes": "PatternInserter dependency injection worked perfectly"
    },
    "PAT:SLUG:GENERATION": {
      "uses": 157,
      "success_rate": 98,
      "last_used": "T001",
      "effectiveness": "excellent",
      "notes": "Title to alias conversion for auto-created patterns"
    },
    "PAT:STRING:PROCESSING": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T001",
      "effectiveness": "excellent", 
      "notes": "Pattern ID to human-readable title conversion"
    },
    "FIX:PATTERN:AUTO_INSERT": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T001",
      "effectiveness": "excellent",
      "performance_notes": "95% reduction in pattern lookups through caching"
    },
    "PAT:ARCHITECTURE:SERVICE_PATTERN": {
      "uses": 3,
      "success_rate": 100,
      "last_used": "T059_APE55",
      "effectiveness": "excellent",
      "notes": "Clean separation between MCP layer and business logic, worked perfectly for ContextPackService design"
    },
    "PAT:ERROR:HANDLING": {
      "uses": 4,
      "success_rate": 100,
      "last_used": "T060_S01",
      "effectiveness": "excellent",
      "notes": "Comprehensive error management with graceful degradation, maintained backward compatibility in validation fixes. Reflection failures don't fail task completion - graceful degradation."
    },
    "PAT:CACHE:TTL_SIMPLE": {
      "uses": 2,
      "success_rate": 100,
      "last_used": "APE-36",
      "effectiveness": "excellent",
      "notes": "Simple TTL cache for session context and explanation caching"
    },
    "PAT:RANKING:SESSION_AWARE": {
      "uses": 2,
      "success_rate": 100,
      "last_used": "APE-36",
      "effectiveness": "excellent",
      "notes": "Session-aware pattern ranking with complementary pattern analysis"
    },
    "PAT:n_F_X5g-lONS": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "APE-36",
      "effectiveness": "excellent",
      "notes": "Context-aware cache key generation excluding volatile session data",
      "status": "draft"
    },
    "PAT:nt7p0FH4hP4f": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "APE-36",
      "effectiveness": "excellent",
      "notes": "Error message sanitization removing sensitive paths and secrets",
      "status": "draft"
    },
    "PAT:VALIDATION:PREPROCESSING": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T048",
      "effectiveness": "excellent",
      "notes": "structuredClone for non-destructive request preprocessing"
    },
    "PAT:ID:NORMALIZATION": {
      "uses": 1,
      "success_rate": 100, 
      "last_used": "T048",
      "effectiveness": "excellent",
      "notes": "Smart pattern ID validation without over-normalizing valid 3-part IDs"
    },
    "PAT:BATCH:INTEGRATION": {
      "uses": 1,
      "success_rate": 80,
      "last_used": "T048", 
      "effectiveness": "good",
      "notes": "Required modification for explicit batch pattern conversion to claims format"
    },
    "FIX:TEST:MOCK_ESM": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T048",
      "effectiveness": "excellent", 
      "notes": "ES module mocking pattern for comprehensive test coverage"
    },
    "PAT:Z0KziNtvNPRj": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T048",
      "effectiveness": "excellent",
      "notes": "Request Preprocessor Pattern using structuredClone for non-destructive preprocessing",
      "status": "draft",
      "performance_notes": "Negligible overhead (<1ms), 92% cache hit rate"
    },
    "PAT:SEARCH:MULTI_SIGNAL": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T058_APE-54",
      "effectiveness": "excellent",
      "notes": "Multi-signal similarity scoring with weighted factors (tags:3, themes:2, files:2, components:1)",
      "performance_notes": "4ms query time vs 50ms requirement, 80% cache hit rate"
    },
    "PAT:CACHE:LRU": {
      "uses": 2,
      "success_rate": 100,
      "last_used": "T059_APE55",
      "effectiveness": "excellent",
      "notes": "LRU cache with TTL for similarity search results, 2-tier caching strategy. Excellent performance for context pack caching with 75% hit rate."
    },
    "BUILD:MODULE:ESM": {
      "uses": 5,
      "success_rate": 100,
      "last_used": "T059_APE55",
      "effectiveness": "excellent",
      "notes": "ES modules with .js extensions for TypeScript compatibility. Worked seamlessly in context pack service."
    },
    "PAT:REPOSITORY": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T058_APE-54",
      "effectiveness": "excellent",
      "notes": "Repository pattern for clean database access layer"
    },
    "PAT:VALIDATION:FLEXIBLE_INPUT": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T060_APE-61",
      "effectiveness": "excellent",
      "notes": "Convert flexible input formats to canonical form, enables flexible API usage while maintaining type safety"
    },
    "PAT:ID:ALIAS_PRESERVATION": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T060_APE-61",
      "effectiveness": "excellent",
      "notes": "Preserve original IDs as aliases during normalization, maintains backward compatibility in auto-creation scenarios"
    },
    "PAT:CONTEXT:BUDGETED_ASSEMBLY": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T059_APE55",
      "effectiveness": "excellent",
      "notes": "Size-aware content assembly during build vs post-build trimming. 3x faster performance while maintaining quality.",
      "performance_notes": "3x faster than post-build trimming, maintains 30KB size limits efficiently"
    },
    "FIX:TEST:SEPARATE_SUITES": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T061",
      "effectiveness": "excellent",
      "notes": "Separate mocked and integration tests to avoid contamination. Resolved mock contamination preventing database operations."
    },
    "FIX:CONSTRUCTOR:PARAMETER_VALIDATION": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T063",
      "effectiveness": "excellent",
      "notes": "Always verify constructor parameter types match expected interface. Resolved misleading 'alias column' error that was actually parameter type mismatch."
    },
    "PAT:MCP:TOOL_INTEGRATION": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T061_FOLLOWUP",
      "effectiveness": "excellent",
      "notes": "Simple configuration-only integration by adding tool identifier to agent tools list. Zero complexity, immediate availability.",
      "performance_notes": "<1 minute integration time, zero overhead"
    },
    "PAT:VALIDATION:ZOD": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T060_S01",
      "effectiveness": "excellent",
      "notes": "Input validation for task completion parameters"
    },
    "PAT:SERVICE:POST_INJECTION": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T060_S01",
      "effectiveness": "excellent",
      "notes": "Post-construction service injection to avoid circular dependencies. Eliminates circular dependency issues while enabling optional integrations.",
      "performance_notes": "Zero overhead, clean separation of concerns"
    },
    "PAT:TOOL:ATOMIC_SEPARATION": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "T062_S01",
      "effectiveness": "excellent",
      "notes": "Separate complex operations into atomic, composable tools. Agent gains complete workflow visibility and control while maintaining backward compatibility.",
      "performance_notes": "No overhead, same functionality with better separation"
    },
    "PAT:DATABASE:HYBRID_METADATA": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "APE-65",
      "effectiveness": "excellent",
      "notes": "Combine static database columns with runtime joins for optimal metadata performance. Balances fast access with flexibility.",
      "performance_notes": "<500ms for metadata-enhanced queries, 40% storage efficiency vs normalized tables"
    },
    "PAT:SCORING:WILSON_CONFIDENCE": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "APE-65",
      "effectiveness": "excellent",
      "notes": "Wilson confidence interval for reliable pattern trust calculation. More nuanced than simple averages, accounts for sample size uncertainty.",
      "performance_notes": "<1ms computation time, provides statistically sound trust scores"
    },
    "PAT:TEST:ESM_MOCK": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "TbzXveKStGxs7f3pGpaMZX",
      "effectiveness": "excellent",
      "notes": "ESM module mocking using jest.unstable_mockModule for proper test isolation. Required for testing spawn() calls with ESM modules.",
      "performance_notes": "Essential for ESM test environments with Jest"
    },
    "FIX:BUILD:DUPLICATE_JS": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "TbzXveKStGxs7f3pGpaMZX",
      "effectiveness": "excellent",
      "notes": "Remove compiled JavaScript files before testing TypeScript to prevent Jest mocking conflicts. Critical anti-pattern prevention.",
      "performance_notes": "Immediate resolution of Cannot find module errors"
    },
    "PAT:SECURITY:INPUT_SANITIZATION": {
      "uses": 1,
      "success_rate": 100,
      "last_used": "TbzXveKStGxs7f3pGpaMZX",
      "effectiveness": "excellent",
      "notes": "Comprehensive input validation and sanitization for command execution to prevent injection attacks. Security-critical pattern.",
      "performance_notes": "<1ms validation overhead, prevents command injection vulnerabilities"
    }
  }
}