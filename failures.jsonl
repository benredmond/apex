{"id":"F001","task":"DEBUG_2025-07-30","error":"MCP error -32603: Reflection processing failed: TypeError: Transaction function cannot return a promise","cause":"Async function passed to better-sqlite3 transaction","fix":"Remove async/await from transaction function","pattern":"FIX:SQLITE:SYNC","frequency":1,"last_seen":"2025-07-30","contexts":["mcp","sqlite","async"],"prevention":"Use synchronous functions with better-sqlite3 transactions","confidence_score":0.98}
{"id":"F002","task":"T060_APE-61","error":"Pattern auto-creation integration tests failing (4 tests)","cause":"Database persistence issues separate from validation layer","fix":"Validation fixes successful, database debugging needed separately","pattern":"FIX:DATABASE:PERSISTENCE","frequency":1,"last_seen":"2025-08-05","contexts":["testing","database","integration","patterns"],"prevention":"Always distinguish validation issues from database persistence issues","confidence_score":0.85}
{"id":"F003","task":"T061","error":"Mock contamination preventing real database operations in tests","cause":"jest.unstable_mockModule() at file level affects ALL tests in that file","fix":"Separate mocked and integration tests into different files","pattern":"FIX:TEST:SEPARATE_SUITES","frequency":1,"last_seen":"2025-08-05","contexts":["testing","mocking","jest","integration"],"prevention":"Never mix mocked and real implementations in same test file","confidence_score":0.95}
{"id":"F004","task":"T063","error":"table patterns has no column named alias","cause":"Parameter type mismatch - passed Database instance instead of options object to constructor","fix":"Changed new PatternRepository(db.database) to new PatternRepository({ dbPath })","pattern":"FIX:CONSTRUCTOR:PARAMETER_VALIDATION","frequency":1,"last_seen":"2025-08-06","contexts":["database","constructor","parameters","types","misleading-errors"],"prevention":"Always verify constructor parameter types match API expectations before debugging complex issues","confidence_score":0.98}
{"id":"F005","task":"APE-65","error":"Initial normalized metadata tables approach caused >1s query times","cause":"Complex joins across multiple metadata tables for enhanced pattern information","fix":"Implemented hybrid approach with critical fields as database columns and flexible fields as JSON","pattern":"PAT:DATABASE:HYBRID_METADATA","frequency":1,"last_seen":"2025-08-06","contexts":["database","performance","metadata","schema-design"],"prevention":"Use hybrid database design for metadata systems - balance performance with flexibility","confidence_score":0.92}